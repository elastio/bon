#cloud-config

disk_setup:
  ${data_volume_device}:
    table_type: gpt
    layout: true
    overwrite: false

mounts:
  - - ${data_volume_device}
    - ${data_volume_path}
    - ${data_volume_fs}
    - defaults,noauto,x-systemd.growfs,x-systemd.makefs,x-systemd.device-timeout=10min
    - "0"
    - "0"

groups: [docker]

users:
  - default
  - name: ${server_os_user}
    lock_passwd: true
    shell: /bin/bash
    ssh_authorized_keys: ["${ssh_public_key}"]
    groups: docker
    sudo: ALL=(ALL) NOPASSWD:ALL

package_update: true
package_upgrade: true
package_reboot_if_required: true
packages:
  - apt-transport-https
  - ca-certificates
  - curl
  - gnupg

write_files:
  %{~ for path, file in files ~}
  - encoding: gzip+base64
    content: ${file.content}
    owner: '${server_os_user}:${server_os_user}'
    path: ${path}
    permissions: '${file.perms}'
    defer: true
  %{~ endfor ~}

runcmd:
  - |
    log_content() {
      echo "Contents of $1:"
      cat $1 || echo "The file is absent at path $1"
    }
    log_content /var/run/reboot-required
    log_content /var/run/reboot-required.pkgs

  - ip addr add ${server_ip} dev eth0

  - systemctl enable --now data-volume.service

  - echo 'Installing docker...'

  # Installs docker and docker-compose on the server
  # Based on instructions from https://docs.docker.com/engine/install/ubuntu/
  # and several github gists from here and there

  - export DOCKER_GPG=/etc/apt/keyrings/docker.gpg
  - export DOCKER_URL=https://download.docker.com/linux/ubuntu
  - mkdir -p /etc/apt/keyrings
  - curl --retry 5 --retry-connrefused -fsSL $DOCKER_URL/gpg | gpg --dearmor -o $DOCKER_GPG
  - 'echo "deb [arch=$(dpkg --print-architecture) signed-by=$DOCKER_GPG] $DOCKER_URL $(lsb_release -cs) stable"
    | tee /etc/apt/sources.list.d/docker.list > /dev/null'
  - apt-get update -y
  - apt-get install -y docker-ce docker-ce-cli containerd.io docker-compose-plugin
  - systemctl enable --now docker.service

  # Enable the systemd service responsible for managing Docker Compose services
  - systemctl enable --now umami.service
