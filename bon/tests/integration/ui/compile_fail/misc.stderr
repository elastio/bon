error: Only structs with named fields are supported
 --> tests/integration/ui/compile_fail/misc.rs:5:1
  |
5 | struct TupleStruct(u32, u32);
  | ^^^^^^

error: can't infer the name to use for this function argument; please use a simple `identifier: type` syntax for the function argument, or add `#[builder(name = explicit_name)]` to specify the name explicitly
 --> tests/integration/ui/compile_fail/misc.rs:8:26
  |
8 | fn destructuring((x, y): (u32, u32)) {
  |                          ^^^^^^^^^^

error: Unexpected type `bool`
  --> tests/integration/ui/compile_fail/misc.rs:14:47
   |
14 | fn explicit_into_equals_true(#[builder(into = true)] _x: u32) {}
   |                                               ^^^^

error: Unexpected type `bool`
  --> tests/integration/ui/compile_fail/misc.rs:20:53
   |
20 | fn unnecessary_into_override_false(#[builder(into = false)] _x: u32) {}
   |                                                     ^^^^^

error: this #[builder(setters(...))] contains no options to override the default behavior for the selected setters like `into`, so it does nothing
  --> tests/integration/ui/compile_fail/misc.rs:22:11
   |
22 | #[builder(setters())]
   |           ^^^^^^^

error: nested attributes are not allowed in the type pattern of #[builder(setters(filter(...)))]
  --> tests/integration/ui/compile_fail/misc.rs:25:35
   |
25 | #[builder(setters(into, filter(fn(#[attr] a: u32))))]
   |                                   ^

error: expected at least one parameter in parentheses
  --> tests/integration/ui/compile_fail/misc.rs:28:11
   |
28 | #[builder(start_fn())]
   |           ^^^^^^^^

error: `skip` attribute can't be specified with other attributes like `into` because there will be no setter generated for this member to configure
  --> tests/integration/ui/compile_fail/misc.rs:33:21
   |
33 |     #[builder(skip, into)]
   |                     ^^^^

error: `skip` attribute can't be specified with other attributes like `name` because there will be no setter generated for this member to configure
  --> tests/integration/ui/compile_fail/misc.rs:39:28
   |
39 |     #[builder(skip, name = bar)]
   |                            ^^^

error: `skip` attribute can't be specified with other attributes like `default` because there will be no setter generated for this member to configure. If you wanted to specify a value for the member, then use the following syntax instead `#[builder(skip = value)]`
  --> tests/integration/ui/compile_fail/misc.rs:45:21
   |
45 |     #[builder(skip, default = 42)]
   |                     ^^^^^^^

error: duplicate key in the map
  --> tests/integration/ui/compile_fail/misc.rs:51:9
   |
51 |         "Hello": "Blackjack",
   |         ^^^^^^^

error: duplicate key in the map
  --> tests/integration/ui/compile_fail/misc.rs:52:9
   |
52 |         "Hello": "Littlepip",
   |         ^^^^^^^

error: duplicate value in the set
  --> tests/integration/ui/compile_fail/misc.rs:55:43
   |
55 |     let set: BTreeSet<String> = bon::set!["mintals", "guns", "mintals", "roses"];
   |                                           ^^^^^^^^^

error: duplicate value in the set
  --> tests/integration/ui/compile_fail/misc.rs:55:62
   |
55 |     let set: BTreeSet<String> = bon::set!["mintals", "guns", "mintals", "roses"];
   |                                                              ^^^^^^^^^
