error: `with` attribute can't be specified together with `into`
 --> tests/integration/ui/compile_fail/attr_with.rs:5:21
  |
5 |     #[builder(into, with = |x: u32| x + 1)]
  |                     ^^^^

error: `for<...>` syntax is not allowed here
  --> tests/integration/ui/compile_fail/attr_with.rs:11:22
   |
11 |     #[builder(with = for<'a> |x: &'a u32| -> u32 { x + 1 })]
   |                      ^^^

error: `const` keyword is not allowed here
  --> tests/integration/ui/compile_fail/attr_with.rs:17:22
   |
17 |     #[builder(with = const || 1)]
   |                      ^^^^^

error: `static` keyword is not allowed here
  --> tests/integration/ui/compile_fail/attr_with.rs:23:22
   |
23 |     #[builder(with = static || 1)]
   |                      ^^^^^^

error: `async` keyword is not allowed here
  --> tests/integration/ui/compile_fail/attr_with.rs:29:22
   |
29 |     #[builder(with = async || 1)]
   |                      ^^^^^

error: `move` keyword is not allowed here
  --> tests/integration/ui/compile_fail/attr_with.rs:35:22
   |
35 |     #[builder(with = move || 1)]
   |                      ^^^^

error: expected one of the following syntaxes:
       (1) no return type annotation;
       (2) `-> Result<_, {ErrorType}>` or `-> Result<_>` return type annotation;

       in the case (1), the closure is expected to return a value of the same type as the member's type;

       in the case (2), the closure is expected to return a `Result` where the `Ok` variant is of the same type as the member's type; the `_` placeholder must be spelled literally to mark the type of the member; an optional second generic parameter for the error type is allowed
  --> tests/integration/ui/compile_fail/attr_with.rs:41:34
   |
41 |     #[builder(with = |x: u32| -> u32 { x + 1 })]
   |                                  ^^^

error[E0308]: mismatched types
  --> tests/integration/ui/compile_fail/attr_with.rs:48:12
   |
48 |         Ok(value)
   |         -- ^^^^^ expected `u32`, found `&str`
   |         |
   |         arguments to this enum variant are incorrect
   |
help: the type constructed contains `&str` due to the type of the argument passed
  --> tests/integration/ui/compile_fail/attr_with.rs:48:9
   |
48 |         Ok(value)
   |         ^^^-----^
   |            |
   |            this argument influences the type of `Ok`
note: tuple variant defined here
  --> $RUST/core/src/result.rs
   |
   |     Ok(#[stable(feature = "rust1", since = "1.0.0")] T),
   |     ^^

error[E0308]: mismatched types
  --> tests/integration/ui/compile_fail/attr_with.rs:55:62
   |
55 |     #[builder(with = |value: impl Into<::core::net::IpAddr>| value)]
   |                              ------------------------------  ^^^^^ expected `u32`, found type parameter `impl Into<::core::net::IpAddr>`
   |                              |
   |                              found this type parameter
56 |     value: u32,
   |            --- expected `u32` because of return type
   |
   = note:        expected type `u32`
           found type parameter `impl Into<::core::net::IpAddr>`
